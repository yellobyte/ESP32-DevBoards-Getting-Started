; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;cache_dir = C:/Users/name/.platformio/.cache
; default env(s) to be built
default_envs = release
;default_envs = debug

; Custom data group
; can be use in [env:***] via ${common.***}
[common]

; Global data shared between all [env:NAME] environments
[env]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
framework = arduino
board = yb_esp32s3_eth   ; requires Arduino ESP32 release >= v3.1.2
monitor_port = COM[3456789]
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time, colorize
upload_port = COM[3456789]
upload_speed = 921600
; --- only for boards with 8MB Flash (or more):
;board_build.partitions = default_8MB.csv
;board_upload.flash_size = 8MB
;board_upload.maximum_size = 8388608
; ---
lib_deps = Ethernet@^2.0.2
build_flags = 
; --- only for boards with PSRAM:  
;  -DBOARD_HAS_PSRAM
;  -mfix-esp32-psram-cache-issue 
; ---
; for directing serial output to port USB (instead of UART):
;  -DARDUINO_USB_CDC_ON_BOOT=1
; ---
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose   
  -DCORE_DEBUG_LEVEL=3
; my personal tasks, to be accessed under PlatformIO -> PROJECT TASKS -> Custom
extra_scripts = add_tasks.py

[env:release]
build_flags = 
  ${env.build_flags}
lib_deps = 
  ${env.lib_deps}

[env:debug]
platform_packages = platformio/tool-openocd-esp32
build_type = debug
build_flags = 
  ${env.build_flags}
debug_tool = custom
; debug_server setting not needed if you start OpenOCD via command prompt
debug_server = ${platformio.packages_dir}/tool-openocd-esp32/bin/openocd 
  -fboard/esp32s3-builtin.cfg
;  -f${platformio.packages_dir}/tool-openocd-esp32/share/openocd/scripts/board/esp32s3-builtin.cfg
debug_port = localhost:3333
debug_init_break = tbreak setup
;debug_init_break = break loop
lib_deps = 
  ${env.lib_deps}



	