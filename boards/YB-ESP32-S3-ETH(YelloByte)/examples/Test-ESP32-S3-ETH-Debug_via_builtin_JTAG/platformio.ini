; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;cache_dir = C:/Users/tj/.platformio/.cache
default_envs = debug

; Custom data group
; can be use in [env:***] via ${common.***}
[common]

; Global data for all [env:***]
[env]
; Standard YB-ESP32-S3-ETH board equipped with ESP32-S3-WROOM-1-N8R8 (8MB Flash & 8MB PSRAM).
; ===== IMPORTANT=====:
; The setting 'board = esp32-s3-devkitc-1' will work as well but embedded PSRAM (8MB Octal SPI) won't be accessible.
; With below setting 'board = yb-esp32-s3-eth-n8r8' the PSRAM will be fully functional. For this you must copy the 
; provided file "yb-esp32-s3-eth-n8r8.json" to "C:\Users\name\.platformio\platforms\espressif32\boards".
board = yb-esp32-s3-eth-n8r8
platform = espressif32
framework = arduino
;monitor_port = COM[12345678]
monitor_port = COM14
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time, colorize
;monitor_port = COM[12345678]
upload_port = COM14
;upload_speed = 115200
upload_speed = 921600
;lib_deps =
build_flags = 
; defining port for serial output:
; IMPORTANT: port 'USB' will be gone for a few seconds after resetting the board/ESP32-S3,
;            if you dislike it you better use port 'UART' for serial output (ARDUINO_USB_CDC_ON_BOOT=0)
; 0... USB-port labeled "UART" connected to CH340 USB-TTL bridge IC
; 1... USB-port labeled "USB", directly (!) connected to ESP32-S3 MCU
  -DARDUINO_USB_CDC_ON_BOOT=0
; already defined in PlatformIO builder scripts (*.json) for ESP32-S3 boards
;  -DARDUINO_USB_MODE=1
; my personal tasks, to be accessed under PlatformIO -> PROJECT TASKS -> Custom
extra_scripts = add_tasks.py

[env:debug]
; default build as defined in section [platformio]
build_flags = 
  ${env.build_flags}
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose   
  -DCORE_DEBUG_LEVEL=5
; for boards with PSRAM  
  -DBOARD_HAS_PSRAM
  -mfix-esp32-psram-cache-issue  
;platformio/tool-openocd-esp32@^2.1100.211028
platform_packages = platformio/tool-openocd-esp32
debug_tool = custom
; debug_server setting not needed if you start OpenOCD via command prompt
debug_server = ${platformio.packages_dir}/tool-openocd-esp32/bin/openocd 
  -fboard/esp32s3-builtin.cfg
;  -f${platformio.packages_dir}/tool-openocd-esp32/share/openocd/scripts/board/esp32s3-builtin.cfg
debug_port = localhost:3333
debug_init_break = tbreak setup
;debug_init_break = break loop
build_type = debug

[env:release]
build_flags = 
  ${env.build_flags}
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose   
  -DCORE_DEBUG_LEVEL=2
; for boards with PSRAM  
  -DBOARD_HAS_PSRAM
  -mfix-esp32-psram-cache-issue  

