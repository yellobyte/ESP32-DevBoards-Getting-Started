; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;cache_dir = C:/Users/name/.platformio/.cache
; default env(s) to be built
; the standard version of the YB-ESP32-S3-ETH board comes with an WROOM-1U-N8R8 module 
default_envs = n8r8

; Custom data group
; can be use in [env:***] via ${common.***}
[common]

; Global data shared between all [env:NAME] environments
[env]
;selects the newest platform version
platform = espressif32
; following different methods to choose a certain platform version
;platform = espressif32@~3.5.0			; allows only bugfixes
;platform = espressif32@3.5.0       ; exact version
;platform = espressif32@4.2.0
;platform = espressif32@5.1.1
;platform = https://github.com/platformio/platform-espressif32.git#v5.1.0   ; Arduino V2.0.4
;platform = https://github.com/platformio/platform-espressif32.git#v5.2.0   ; Arduino V2.0.5
;platform = https://github.com/platformio/platform-espressif32.git#v6.1.0   ; Arduino V2.0.6
;platform = https://github.com/platformio/platform-espressif32.git          ; newest release
;platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32/releases/download/2.0.4/esp32-2.0.4.zip
; following different methods to choose a certain framework version
;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.4
;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.6
;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master ;newest release
framework = arduino
;monitor_port = COM[34567]
monitor_port = 7
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time, colorize
;upload_port = COM[34567]
upload_port = 7
upload_speed = 921600
;upload_speed = 115200
lib_deps = Ethernet2
build_flags = 
; defining port for serial output:
; IMPORTANT: port 'USB' will be gone for a few seconds after resetting the board/ESP32-S3,
;            if you dislike it you better use port 'UART' for serial output (ARDUINO_USB_CDC_ON_BOOT=0)
; 0... USB-port labeled "UART" connected to CH340 USB-TTL bridge IC
; 1... USB-port labeled "USB", directly connected to ESP32-S3 MCU
  -DARDUINO_USB_CDC_ON_BOOT=0
; already defined in PlatformIO builder scripts (*.json) for ESP32-S3 boards
;  -DARDUINO_USB_MODE=1
; avoids build warning "redefinition of ntohl" when using lib Ethernet[2] (w5100.h)
  -DUTIL_H
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose   
  -DCORE_DEBUG_LEVEL=3
; my personal tasks, to be accessed under PlatformIO -> PROJECT TASKS -> Custom
extra_scripts = add_tasks.py

[env:n8r8]
; default build as defined in section [platformio]
; Standard YB-ESP32-S3-ETH dev board equipped with ESP32-S3-WROOM-1U-N8R8 (8MB Flash & 8MB PSRAM).
; ===== IMPORTANT=====:
; The setting 'board = esp32-s3-devkitc-1' will work as well but embedded PSRAM (8MB Octal SPI) won't be accessible.
; With below setting 'board = yb-esp32-s3-eth-n8r8' the PSRAM will be fully functional. For this you must copy the 
; provided file "yb-esp32-s3-eth-n8r8.json" to "C:\Users\name\.platformio\platforms\espressif32\boards".
board = yb-esp32-s3-eth-n8r8
build_flags = 
  ${env.build_flags}
; for boards with PSRAM
  -DBOARD_HAS_PSRAM
  -mfix-esp32-psram-cache-issue  

;[env:n4]
; Special YB-ESP32-S3-ETH board variant equipped with ESP32-S3-WROOM-1(U)-N4 (4MB Flash, no PSRAM)
; ===== IMPORTANT=====:
; Please copy the provided file "yb-esp32-s3-eth-n4.json" to "C:\Users\name\.platformio\platforms\espressif32\boards".
;board = yb-esp32-s3-eth-n4
;build_flags = 
;  ${env.build_flags}



	