; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;globallib_dir = ../../../lib
;src_dir = .

[env:ESP32-S3-DevKitC-1]
platform = espressif32
;platform = espressif32 @ 5.1.1
;platform_packages = framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#2.0.3
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
monitor_port = COM6
monitor_filters = time, esp32_exception_decoder
;monitor_filters = esp32_exception_decoder, log2file
;monitor_rts = 0
;monitor_dtr = 0
upload_port = COM6
upload_speed = 921600
lib_deps = 
  mathertel/OneButton
  lvgl
;lib_ignore = 
;lib_ldf_mode = deep+
;debug_tool = esp-prog
;debug_init_break = tbreak setup
build_flags = 
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose
  -DCORE_DEBUG_LEVEL=4
  -DLV_CONF_PATH=../../../../include/lv_conf.h
;  -DLV_CONF_INCLUDE_SIMPLE
;  -DLV_LVGL_H_INCLUDE_SIMPLE  
;  -DBOARD_HAS_PSRAM
;  -mfix-esp32-psram-cache-issue 
;  -mfix-esp32-psram-cache-strategy=memw	
  -DARDUINO_USB_MODE=1 
; without below line no serial output from Serial.print()
  -DARDUINO_USB_CDC_ON_BOOT=1 
;board_build.partitions = default.csv
;board_build.partitions = no_ota.csv
;board_build.partitions = min_spiffs.csv
;board_build.partitions = huge_app.csv
;board_build.partitions = default_8MB.csv
;board_build.mcu = esp32s3
;board_build.arduino.memory_type = qspi_qspi
;board_build.f_cpu = 240000000L
;board_build.flash_size = 8MB
;board_build.flash_mode = dio
;board_build.flash_type = qspi
;board_build.psram_type = qspi
;board_build.boot=qio
;board_build.flash_freq=120m
;board_build.flash_size =4MB
;board_build.boot=qio
;board_build.memory_type = qspi_opi
;board_build.boot_freq = 80m
extra_scripts = add_tasks.py









